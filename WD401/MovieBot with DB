const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const admin = require('firebase-admin');
const serviceAccount = require('./key.json'); // Update with your service account file

const BOT_TOKEN = '';
const OMDB_API_KEY = ''; 

const bot = new TelegramBot(BOT_TOKEN, { polling: true });

admin.initializeApp({
    credential: admin.credential.cert(serviceAccount),
    // You don't need the databaseURL for Firestore
});

const db = admin.firestore();
const moviesCollection = db.collection('movies'); // Firestore collection

// Start command
bot.onText(/\/start/, (msg) => {
    bot.sendMessage(
        msg.chat.id,
        `Welcome, ${msg.chat.first_name}! 🎬\nI can help you find information about movies. Just send me a movie name!`
    );
});

// /get command to fetch all stored movie names from Firestore
bot.onText(/\/get/, async (msg) => {
    const chatId = msg.chat.id;
    try {
        const snapshot = await moviesCollection.get();  // Get all documents in the collection
        if (!snapshot.empty) {
            const movies = snapshot.docs.map(doc => doc.data().title);  // Get movie titles from the documents
            const movieList = movies.join('\n');
            bot.sendMessage(chatId, `Movies you've entered:\n${movieList}`);
        } else {
            bot.sendMessage(chatId, '❌ No movies found in the database.');
        }
    } catch (error) {
        console.error('Error fetching movies:', error);
        bot.sendMessage(chatId, '⚠️ Something went wrong while fetching the movies.');
    }
});

// Message handling to get movie details and store the movie name in Firestore
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const query = msg.text.trim();

    if (query === '/start' || query === '/get') return;

    try {
        const response = await axios.get(`https://www.omdbapi.com/`, {
            params: {
                apikey: OMDB_API_KEY,
                t: query,
            },
        });

        const movie = response.data;

        if (movie.Response === 'False') {
            bot.sendMessage(chatId, `❌ Sorry, I couldn't find any movie titled "${query}".`);
        } else {
            bot.sendMessage(
                chatId,
                `🎥 *${movie.Title}* (${movie.Year})\n
⭐️ *IMDB Rating*: ${movie.imdbRating}\n
📖 *Plot*: ${movie.Plot}\n
🎭 *Genre*: ${movie.Genre}\n
👨‍💼 *Director*: ${movie.Director}\n
🎞 *Actors*: ${movie.Actors}`,
                { parse_mode: 'Markdown' }
            );

            if (movie.Poster && movie.Poster !== 'N/A') {
                bot.sendPhoto(chatId, movie.Poster);
            }

            // Save movie name to Firestore
            await moviesCollection.add({
                title: movie.Title,
                year: movie.Year,
                imdbRating: movie.imdbRating,
                plot: movie.Plot,
                genre: movie.Genre,
                director: movie.Director,
                actors: movie.Actors,
            });

            bot.sendMessage(chatId, `✅ Movie "${movie.Title}" has been saved to the Firestore database.`);
        }
    } catch (error) {
        console.error('Error fetching movie data:', error);
        bot.sendMessage(chatId, '⚠️ Something went wrong. Please try again later.');
    }
});

console.log('Bot is running...');
